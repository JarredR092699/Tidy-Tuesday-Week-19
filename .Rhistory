# install.packages("tidyverse")
library(tidyverse)
# install.packages("ggplot2")
library(ggplot2)
# install.packages("tidytuesdayR")
library(tidytuesdayR)
# install.packages("janitor")
library(janitor)
# install.packages("ggthemes")
library(ggthemes)
# install.packages("gh")
library(gh)
# install.packages("cowplot")
library(cowplot)
# install.packages("ggridges")
library(ggridges)
# Load the gh package
library(gh)
# ISO 8601
tidytues_data <- tt_load("2023-05-09")
# Create childcare_costs object
childcare_costs <- tidytues_data$childcare_costs
# Create counties object
counties <- tidytues_data$counties
# childcare_costs
glimpse(childcare_costs)
colnames(childcare_costs)
# counties
glimpse(counties)
colnames(counties)
joined_data <- left_join(counties, childcare_costs, by = ("county_fips_code"))
head(joined_data)
pa_mhi <- joined_data %>%
# filter the data to only include counties in PA
filter(state_abbreviation == "PA", study_year == 2018) %>%
# arrange the data from largest to smallest median home income
arrange(desc(mhi_2018)) %>%
# select the top 20 counties in the state
top_n(20)
# Use our segmented data frame
pa_mhi_plot <- pa_mhi %>%
# send object into ggplot
ggplot(aes(x=reorder(county_name, mhi_2018), y=mhi_2018))+
# geom_segment() draws the lines
geom_segment(aes(xend=reorder(county_name, -mhi_2018), y=0, yend = mhi_2018), color = 'skyblue')+
# geom_point() adds the point at the end of each county
geom_point(color = "blue", size = 3, alpha = 0.6)+
# This edits the values of our y axis
scale_y_continuous(limits = c(0, max(pa_mhi$mhi_2018)*1.1), expand=c(0,0))+
# flips our chart so it is shown horizontally instead of vertically
coord_flip()+
theme(
text = element_text(size = 12, color = "gray15"),
title = element_text(size = 16),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
panel.background = element_rect(fill = "floralwhite"),
plot.background = element_rect(fill = "floralwhite"),
axis.text.y = element_text(face = "bold", color = "black"),
axis.text.x = element_text(face = "bold", color = "black"),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)
)+
labs(
title = "Median Household Income in Pennsylvania (2018)",
subtitle = "Top 20 Counties"
)+
xlab("County Name")+
ylab("Median Household Income (2018)")
pictured_plot <- ggdraw(pa_mhi_plot)+
draw_image("https://upload.wikimedia.org/wikipedia/commons/thumb/f/f7/Flag_of_Pennsylvania.svg/1280px-Flag_of_Pennsylvania.svg.png", height = .25, x = 0.30, y = 0.2)
# Save our plot to our computer using ggsave()
ggsave("pa_median_household_income.png", pictured_plot, dpi = 300, height = 10, width = 20, units = "in")
# Segment the data
ohio_unemployment <- joined_data %>%
# filter only states with the abbreviation "OH"
filter(state_abbreviation == "OH") %>%
# group by study_year so that we can grab the average unemployment rate per year
group_by(study_year)
ohio_chart <- ohio_unemployment %>%
ggplot(aes(x=unr_16, y=study_year, fill = study_year))+
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01)+
theme_ridges()+
theme(
legend.position = "none",
text = element_text(size = 12, color = "gray15"),
title = element_text(size = 16),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
panel.background = element_rect(fill = "floralwhite"),
plot.background = element_rect(fill = "floralwhite"),
axis.text.y = element_text(face = "bold", color = "black"),
axis.text.x = element_text(face = "bold", color = "black"),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.title.x = element_text(hjust = 0.5),
axis.title.y = element_text(hjust = 0.5)
)+
labs(
title = "Distribution of Unemployment in Ohio",
subtitle = "Unemployment for population 16+ years old"
)+
xlab("% of Unemployment")+
ylab("Year")
ohio_chart
ohio_chart <- ohio_unemployment %>%
ggplot(aes(x=unr_16, y=study_year, fill = study_year))+
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01)+
theme_ridges()+
theme(
legend.position = "none",
text = element_text(size = 12, color = "gray15"),
title = element_text(size = 16),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
panel.background = element_rect(fill = "floralwhite"),
plot.background = element_rect(fill = "floralwhite"),
axis.text.y = element_text(face = "bold", color = "black"),
axis.text.x = element_text(face = "bold", color = "black"),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.title.x = element_text(hjust = 0.5),
axis.title.y = element_text(hjust = 0.5)
)+
labs(
title = "Distribution of Unemployment in Ohio",
subtitle = "Unemployment for population 16+ years old"
)+
xlab("% of Unemployment")+
ylab("Year")
ohio_chart
# install.packages("tidyverse")
library(tidyverse)
# install.packages("ggplot2")
library(ggplot2)
# install.packages("tidytuesdayR")
library(tidytuesdayR)
# install.packages("janitor")
library(janitor)
# install.packages("ggthemes")
library(ggthemes)
# install.packages("gh")
library(gh)
# install.packages("cowplot")
library(cowplot)
# install.packages("ggridges")
library(ggridges)
# Load the gh package
library(gh)
pa_mhi_plot <- pa_mhi %>%
# send object into ggplot
ggplot(aes(x=reorder(county_name, mhi_2018), y=mhi_2018))+
# geom_segment() draws the lines
geom_segment(aes(xend=reorder(county_name, -mhi_2018), y=0, yend = mhi_2018), color = 'skyblue')+
# geom_point() adds the point at the end of each county
geom_point(color = "blue", size = 3, alpha = 0.6)+
# This edits the values of our y axis
scale_y_continuous(limits = c(0, max(pa_mhi$mhi_2018)*1.1), expand=c(0,0))+
# flips our chart so it is shown horizontally instead of vertically
coord_flip()+
theme(
text = element_text(size = 12, color = "gray15"),
title = element_text(size = 16),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
panel.background = element_rect(fill = "floralwhite"),
plot.background = element_rect(fill = "floralwhite"),
axis.text.y = element_text(face = "bold", color = "black"),
axis.text.x = element_text(face = "bold", color = "black"),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)
)+
labs(
title = "Median Household Income in Pennsylvania (2018)",
subtitle = "Top 20 Counties"
)+
xlab("County Name")+
ylab("Median Household Income (2018)")
pictured_plot <- ggdraw(pa_mhi_plot)+
draw_image("https://upload.wikimedia.org/wikipedia/commons/thumb/f/f7/Flag_of_Pennsylvania.svg/1280px-Flag_of_Pennsylvania.svg.png", height = .25, x = 0.30, y = 0.2)
# Save our plot to our computer using ggsave()
ggsave("pa_median_household_income.png", pictured_plot, dpi = 300, height = 10, width = 20, units = "in")
ohio_unemployment <- joined_data %>%
# filter only states with the abbreviation "OH"
filter(state_abbreviation == "OH") %>%
# group by study_year so that we can grab the average unemployment rate per year
group_by(study_year)
# Convert study_year to a factor
ohio_unemployment$study_year <- as.factor(ohio_unemployment$study_year)
# Check to make sure this worked
str(ohio_unemployment)
ohio_chart <- ohio_unemployment %>%
ggplot(aes(x=unr_16, y=study_year, fill = study_year))+
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01)+
theme_ridges()+
theme(
legend.position = "none",
text = element_text(size = 12, color = "gray15"),
title = element_text(size = 16),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
panel.background = element_rect(fill = "floralwhite"),
plot.background = element_rect(fill = "floralwhite"),
axis.text.y = element_text(face = "bold", color = "black"),
axis.text.x = element_text(face = "bold", color = "black"),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.title.x = element_text(hjust = 0.5),
axis.title.y = element_text(hjust = 0.5)
)+
labs(
title = "Distribution of Unemployment in Ohio",
subtitle = "Unemployment for population 16+ years old"
)+
xlab("% of Unemployment")+
ylab("Year")
ohio_chart
